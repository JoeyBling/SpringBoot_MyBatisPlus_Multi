#server
server.port=8088
server.contextPath=/wstro
seo.author=\u6c5f\u897f\u76ca\u5f3a\u5fae\u76c8
seo.keywords=\u6c5f\u897f\u76ca\u5f3a\u5fae\u76c8\u4fe1\u606f\u79d1\u6280\u6709\u9650\u516c\u53f8
seo.description=\u6c5f\u897f\u76ca\u5f3a\u5fae\u76c8\u4fe1\u606f\u79d1\u6280\u6709\u9650\u516c\u53f8\u002c\u8054\u7cfb\u4eba\u003a\u7f57\u5148\u751f\u3002\u6c5f\u897f\u76ca\u5f3a\u5fae\u76c8\u4fe1\u606f\u79d1\u6280\u6709\u9650\u516c\u53f8\u9996\u9875\u6709\u4ea7\u54c1\u002c\u62db\u8058\u002c\u8054\u7cfb\u65b9\u5f0f\u7b49\u8be6\u7ec6\u4fe1\u606f\u002c\u5982\u9700\u4e86\u89e3\u8bf7\u70b9\u51fb\u8fdb\u5165\u3002
server.tomcat.uri-encoding=UTF-8
#server.address=192.168.1.88

#Elasticsearch配置
#默认为elasticsearch
spring.data.elasticsearch.cluster-name=wstro
#elasticsearch日志存储目录
spring.data.elasticsearch.properties.path.logs=elasticsearch/logs
#存储索引的位置
spring.data.elasticsearch.properties.path.home=target/elastic
#elasticsearch数据存储目录
spring.data.elasticsearch.properties.path.data=elasticsearch/data
#连接超时的时间
spring.data.elasticsearch.properties.transport.tcp.connect_timeout=120s
#配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode
spring.data.elasticsearch.cluster-nodes=192.168.1.88:9300
#是否本地连接
spring.data.elasticsearch.local=false
#仓库中数据存储
spring.data.elasticsearch.repositories.enabled=true

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.messages.encoding=UTF-8

spring.http.multipart.maxFileSize=10Mb
spring.http.multipart.maxRequestSize=10Mb

#SpringMail
spring.mail.host=smtp.qq.com
spring.mail.username=2434387555@qq.com
spring.mail.password=wrikdypbpplrdjdc
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# REDIS (RedisProperties)
-# Redis数据库索引（默认为0）
spring.redis.database=0
spring.redis.host=192.168.1.88
spring.redis.password=
spring.redis.port=6379
spring.redis.pool.max-idle=100
spring.redis.pool.min-idle=1
spring.redis.pool.max-active=1000
spring.redis.pool.max-wait=-1

#MyBatisPlus
mybatis-plus.mapper-locations=classpath:/mapper/*Dao.xml
mybatis-plus.typeAliasesPackage=com.wstro.entity
#主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
mybatis-plus.global-config.id-type=0
#字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
mybatis-plus.global-config.field-strategy=0
#驼峰下划线转换
mybatis-plus.global-config.db-column-underline=true
#开发环境启用，部署环境关掉
#刷新mapper 调试神器
mybatis-plus.global-config.refresh-mapper=true
#数据库大写下划线转换
#mybatis-plus.global-config.capital-mode=true
#序列接口实现类配置
#mybatis-plus.global-config.key-generator=com.joey.*
#逻辑删除配置
#mybatis-plus.global-config.logic-delete-value=0
#mybatis-plus.global-config.logic-not-delete-value=1
#自定义填充策略接口实现
#mybatis-plus.global-config.meta-object-handler=com.joey.*
#自定义SQL注入器
#mybatis-plus.global-config.sql-injector=com.joey.*
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.cache-enabled=false

#静态资源映射
spring.resources.static-locations=/statics

#FreeMaker
spring.freemarker.template-loader-path=/WEB-INF/templates
spring.freemarker.allow-request-override=false
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=true
spring.freemarker.request-context-attribute=rc
#spring.freemarker.tag_syntax=auto_detect
spring.freemarker.suffix=.ftl
spring.freemarker.settings.number_format=0.##

#JDBC
# \u6570\u636E\u5E93\u8BBF\u95EE\u914D\u7F6E
# \u4E3B\u6570\u636E\u6E90\uFF0C\u9ED8\u8BA4\u7684
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.1.88:3306/wstro?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=root

# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20

# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.maxWait=60000

# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000

# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false

# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20

# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.filters=stat,wall,log4j

# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
#spring.datasource.useGlobalDataSourceStat=true


# 更多数据源
#custom.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
custom.datasource.ds1.driverClassName =com.mysql.jdbc.Driver
custom.datasource.ds1.url=jdbc:mysql://192.168.1.158:3306/wstro_patent?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
custom.datasource.ds1.username=root
custom.datasource.ds1.password=root